/**
 Copyright (C) <2016>  <Santhilata Kuppili Venkata>

 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package SimpleGui;
import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.xml.StaxDriver;
import org.xml.sax.InputSource;

import javax.swing.*;
import javax.swing.table.TableModel;
import javax.xml.transform.OutputKeys;
import javax.xml.transform.Source;
import javax.xml.transform.Transformer;
import javax.xml.transform.sax.SAXSource;
import javax.xml.transform.sax.SAXTransformerFactory;
import javax.xml.transform.stream.StreamResult;
import java.io.*;
import java.util.logging.Logger;

/**
 *
 * @author santhilata
 */
public class SchemaFrame1 extends javax.swing.JFrame {
    private static Logger logger = Logger.getLogger(SchemaFrame1.class.getCanonicalName());
    private static XStream  xstream = null;

    /**
     * Creates new form SchemaFrame
     */
    public SchemaFrame1() {
        initComponents();
        jPanel2.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        nameDB = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablesAttrsTable = new javax.swing.JTable();
        generateXMLButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        numbDBText = new javax.swing.JTextField();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null}
                },
                new String [] {
                        "Title 1", "Title 2", "Title 3", "Title 4"
                }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null}
                },
                new String [] {
                        "Title 1", "Title 2", "Title 3", "Title 4"
                }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 3, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("Qgen_latest.png"))); // NOI18N
        jLabel1.setText("QGen: Query Workload Generator");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 12, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );

        jLabel1.getAccessibleContext().setAccessibleParent(this);

        saveButton.setText("Save this database");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Database Name");

        nameDB.setText("Enter Database Name");
        /*nameDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameDBActionPerformed(evt);
            }
        });  */

        tablesAttrsTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {null, null},
                        {null, null},
                        {null, null},
                        {null, null},
                        {null, null},
                        {null, null},
                        {null, null},
                        {null, null},
                        {null, null},
                        {null, null},
                        {null, null},
                        {null, null},
                        {null, null},
                        {null, null},
                        {null, null},
                        {null, null},
                        {null, null},
                        {null, null},
                        {null, null},
                        {null, null}
                },
                new String [] {
                        "Table name", "Attributes"
                }
        ));
        tablesAttrsTable.setColumnSelectionAllowed(true);
        jScrollPane3.setViewportView(tablesAttrsTable);
        tablesAttrsTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);

        generateXMLButton.setText("Generate XML file");
        generateXMLButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateXMLButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(71, 71, 71)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(nameDB, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(21, 21, 21)
                                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 679, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(45, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                .addComponent(saveButton)
                                                .addGap(258, 258, 258))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                .addComponent(generateXMLButton, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(158, 158, 158))))
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(nameDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(saveButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                                .addComponent(generateXMLButton)
                                .addGap(25, 25, 25))
        );

        jLabel2.setText("Enter no.of Databases");

        numbDBText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numbDBTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 276, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(133, 133, 133)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(numbDBText, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(numbDBText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.getAccessibleContext().setAccessibleParent(jPanel1);
        numbDBText.getAccessibleContext().setAccessibleParent(jPanel1);

        pack();
    }// </editor-fold>



    private void generateXMLButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        String s = "";

        for (int i = 0; i < numbDB; i++) {
            s = s + databaseSchema[i].toString();

        }
        //System.out.println(s);


        XStream xstream = new XStream(new StaxDriver());
        String xml = xstream.toXML(databaseSchema);
        System.out.println(formatXml(xml));

        //XML to Object Conversion
        DatabaseDetails[] dbschema = (DatabaseDetails[]) xstream.fromXML(xml);
        // for (int i = 0; i <dbschema.length;i++)
        //  System.out.println(dbschema[i]);


        File saveFile = new File("");
        try {
            JFileChooser c = new JFileChooser();
            int returnVal = c.showSaveDialog(this);
            c.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                saveFile = c.getSelectedFile(); // this grabs the file you typed

                FileOutputStream fop = new FileOutputStream(saveFile);
                if (!saveFile.exists()) {
                    saveFile.createNewFile();
                    }
                byte[] contentInBytes = xml.getBytes();
                fop.write(contentInBytes);
                fop.flush();
                fop.close();

                System.out.println("File saved with the name :" + saveFile.getName());
                JOptionPane.showMessageDialog(this, "file saved as " + saveFile.getName());

            }
        }

        //format XML
        catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }


    public static String formatXml(String xml){

        try{
            Transformer serializer = SAXTransformerFactory.newInstance().newTransformer();

            serializer.setOutputProperty(OutputKeys.INDENT, "yes");
            serializer.setOutputProperty("{http://xml.apache.org/xslt}indent-amount", "2");

            Source xmlSource = new SAXSource(new InputSource(new ByteArrayInputStream(xml.getBytes())));
            StreamResult res =  new StreamResult(new ByteArrayOutputStream());

            serializer.transform(xmlSource, res);

            return new String(((ByteArrayOutputStream)res.getOutputStream()).toByteArray());

        }catch(Exception e){
            return xml;
        }
    }



    private void numbDBTextActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        if (Character.isDigit(numbDBText.getText().charAt(0))) {
            numbDB = Integer.parseInt(numbDBText.getText());

        }
        else JOptionPane.showMessageDialog(this,"Please enter a valid number");

        resetPanel2();
    }

    public void resetPanel2(){
        nameDB.setText("");
        TableModel model = tablesAttrsTable.getModel();
        for (int i=0; i < model.getColumnCount(); i++)
            for (int j=0; j < model.getRowCount(); j++){
                tablesAttrsTable.setValueAt("",j,i);
              //  System.out.println("Now clearing "+j + " "+ i);
            }

        tablesAttrsTable.setVisible(true);
        jPanel2.setVisible(true);
    }

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) throws ArrayIndexOutOfBoundsException{
        // TODO add your handling code here:

        jPanel2.setVisible(true);
        currentDBNumber++;

        if (currentDBNumber >= numbDB){

            int input = JOptionPane.showConfirmDialog(this,"You have exceeded number of databases. Do you want to reset number of databases","No.of databases="+numbDB,JOptionPane.YES_NO_OPTION);
            if (input == JOptionPane.YES_OPTION){
                JPanel myPanel = new JPanel();
                JTextField numdbs = new JTextField(5);
                myPanel.add(new JLabel("Revised number of Databases"));
                 myPanel.add(numdbs);
                myPanel.add(Box.createHorizontalStrut(15)); // a spacer


                int result = JOptionPane.showConfirmDialog(this, myPanel,
                        "Enter new value. Your current value is ="+numbDB, JOptionPane.OK_CANCEL_OPTION);
                if (result == JOptionPane.OK_OPTION) {
                  //  System.out.println("numdbs: " + numdbs.getText());
                    currentDBNumber++;
                    numbDB = Integer.parseInt(numdbs.getText());
                }

            }

            else {

                JOptionPane.showMessageDialog(this,"Please hit generate XML Button");
            }

        }



        String[] tables = new String[20];
        String[][] attributes = new String[20][20];

        TableModel model = tablesAttrsTable.getModel();
        int colCount = model.getColumnCount();
        int rowcount = model.getRowCount();

        String[][] output = new String[colCount][rowcount];

        for (int i = 0; i < model.getColumnCount(); i++)
            for (int row = 0; row < rowcount; row++){

                output[i][row] = String.valueOf(tablesAttrsTable.getModel().getValueAt(row,i));
               // attributes[i][row ] = output[i][row];
            }
        // set column names

        for (int row = 0; row < rowcount; row++){
            if (output[0][row] !=null) {
                tables[row] = output[0][row];
                System.out.println(tables[row]);
            }

        }

        //set attribute names
        for (int row =0; row < rowcount; row++){
            String[] attrStr =null;
            if (output[1][row] != null) {
               // System.out.println(output[1][row]);
                attrStr = output[1][row].split(",");
            }

            for (int j = 0; j <attrStr.length; j++){
                attributes[row][j] = attrStr[j];
                System.out.println(attributes[row][j]);
            }
        }


        databaseSchema[currentDBNumber] = new DatabaseDetails();
        databaseSchema[currentDBNumber].setAttributes(attributes);
        databaseSchema[currentDBNumber].setDatabaseName(nameDB.getText());
        databaseSchema[currentDBNumber].setTables(tables);

        resetPanel2();
    }




    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SchemaFrame1.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SchemaFrame1.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SchemaFrame1.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SchemaFrame1.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SchemaFrame1().setVisible(true);
            }
        });
    }

    public DatabaseDetails[] getDatabaseSchema(){
        return  databaseSchema;
    }

    int numbDB = 0;
    DatabaseDetails[] databaseSchema = new DatabaseDetails[20]; ;
    static  int currentDBNumber = -1;

    // Variables declaration - do not modify
    private javax.swing.JButton generateXMLButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField nameDB;
    private javax.swing.JTextField numbDBText;
    private javax.swing.JButton saveButton;
    private javax.swing.JTable tablesAttrsTable;
    // End of variables declaration


}
